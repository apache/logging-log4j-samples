<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to you under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.apache.logging</groupId>
    <artifactId>logging-parent</artifactId>
    <version>10.5.0</version>
    <relativePath />
  </parent>

  <groupId>org.apache.logging.log4j.samples</groupId>
  <artifactId>log4j-samples</artifactId>
  <version>${revision}</version>
  <packaging>pom</packaging>

  <name>Apache Log4j Samples</name>

  <modules>
    <module>log4j-samples-asynclogger</module>
    <module>log4j-samples-configuration</module>
    <module>log4j-samples-flume-common</module>
    <module>log4j-samples-flume-embedded</module>
    <module>log4j-samples-flume-remote</module>
    <module>log4j-samples-jlink</module>
    <module>log4j-samples-loggerProperties</module>
    <module>log4j-samples-parser</module>
    <module>log4j-server</module>
    <module>log4j-spring-cloud-config-sample-application</module>
    <module>log4j-spring-cloud-config-sample-server</module>
  </modules>

  <properties>

    <!-- This project contains only samples and aims no releases.
         Hence, we use a fake version and DO NOT CHANGE IT! -->
    <revision>0.0.0-SNAPSHOT</revision>

    <!-- Some samples require JDK 9+ -->
    <minimalJavaBuildVersion>11</minimalJavaBuildVersion>
    <maven.compiler.release>11</maven.compiler.release>
    <maven.compiler.source />
    <maven.compiler.target />

    <!-- Skip `bnd-baseline-maven-plugin` since this is not deployed -->
    <bnd.baseline.skip>true</bnd.baseline.skip>

    <!-- dependency versions -->
    <assertj.version>3.25.1</assertj.version>
    <disruptor.version>3.4.4</disruptor.version>
    <flatten-maven-plugin.version>1.5.0</flatten-maven-plugin.version>
    <flume.version>1.11.0</flume.version>
    <guava.version>33.0.0-jre</guava.version>
    <hamcrest.version>2.2</hamcrest.version>
    <jackson.version>2.16.1</jackson.version>
    <jetty.version>10.0.19</jetty.version>
    <javax-jms.version>2.0.1</javax-jms.version>
    <junit.version>5.10.1</junit.version>
    <kotlin.version>1.9.22</kotlin.version>
    <kubernetes-client.version>6.9.2</kubernetes-client.version>
    <log4j2.version>2.22.0</log4j2.version>
    <slf4j.version>2.0.11</slf4j.version>
    <snakeyaml.version>2.2</snakeyaml.version>
    <spring-boot.version>2.7.18</spring-boot.version>
    <spring-cloud.version>2021.0.9</spring-cloud.version>
    <spring-framework.version>5.3.31</spring-framework.version>

    <!-- plugin version -->
    <!-- TODO: remove when we upgrade to `logging-parent` 10.3.0 -->
    <maven-artifact-plugin.version>3.5.0</maven-artifact-plugin.version>
  </properties>

  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-bom</artifactId>
        <version>${assertj.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <version>${jackson.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- Transitive dependency of multiple dependencies -->
      <!-- We fix a common version -->
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-bom</artifactId>
        <version>${kotlin.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-client-bom</artifactId>
        <version>${kubernetes-client.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-bom</artifactId>
        <version>${log4j2.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-framework-bom</artifactId>
        <version>${spring-framework.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- Should be at the end, so it does not override the versions above -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- Allow `spring-boot-dependencies` to override these versions -->
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>com.lmax</groupId>
        <artifactId>disruptor</artifactId>
        <version>${disruptor.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.flume.flume-ng-channels</groupId>
        <artifactId>flume-file-channel</artifactId>
        <version>${flume.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-jmx</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-util</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.apache.flume</groupId>
        <artifactId>flume-ng-embedded-agent</artifactId>
        <version>${flume.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.flume</groupId>
        <artifactId>flume-ng-sdk</artifactId>
        <version>${flume.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- Transitive dependency of multiple dependencies -->
      <!-- We fix a common version -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>

      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest</artifactId>
        <version>${hamcrest.version}</version>
      </dependency>

      <dependency>
        <groupId>javax.jms</groupId>
        <artifactId>javax.jms-api</artifactId>
        <version>${javax-jms.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.logging.log4j.samples</groupId>
        <artifactId>log4j-samples-flume-common</artifactId>
        <version>${project.version}</version>
      </dependency>

      <!-- Transitive dependency of multiple dependencies -->
      <!-- We fix a common version -->
      <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <version>${snakeyaml.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>

    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-maven-plugin</artifactId>
          <version>${jetty.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-artifact-plugin</artifactId>
          <configuration>
            <!--
              ~ Disables reproducibility check until this is closed:
              ~
              ~   https://issues.apache.org/jira/browse/MJLINK-75
              -->
            <skipModules>
              <skipModule>org.apache.logging.log4j.samples/log4j-samples-jlink*</skipModule>
            </skipModules>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring-boot.version}</version>
        </plugin>

      </plugins>
    </pluginManagement>

  </build>

</project>
