<?xml version="1.0" encoding="UTF-8"?>
<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.apache.logging</groupId>
    <artifactId>logging-parent</artifactId>
    <version>8</version>
    <relativePath/>
  </parent>

  <groupId>org.apache.logging.log4j.samples</groupId>
  <artifactId>log4j-samples</artifactId>
  <version>${revision}</version>
  <packaging>pom</packaging>

  <name>Apache Log4j Samples</name>
  <url>http://logging.apache.org/log4j/2.x</url>

  <modules>
    <module>log4j-samples-asynclogger</module>
    <module>log4j-samples-configuration</module>
    <module>log4j-samples-flume-common</module>
    <module>log4j-samples-flume-embedded</module>
    <module>log4j-samples-flume-remote</module>
    <module>log4j-samples-loggerProperties</module>
    <module>log4j-spring-cloud-config-sample-application</module>
    <module>log4j-spring-cloud-config-sample-server</module>
  </modules>

  <properties>
    <assertj.version>3.24.2</assertj.version>
    <disruptor.version>3.4.4</disruptor.version>
    <flatten-maven-plugin.version>1.5.0</flatten-maven-plugin.version>
    <flume.version>1.11.0</flume.version>
    <guava.version>32.0.0-jre</guava.version>
    <jackson.version>2.15.2</jackson.version>
    <jetty.version>10.0.15</jetty.version>
    <junit.version>5.9.0</junit.version>
    <kotlin.version>1.8.21</kotlin.version>
    <kubernetes-client.version>6.7.0</kubernetes-client.version>
    <log4j2.version>2.20.0</log4j2.version>
    <maven.compiler.release>8</maven.compiler.release>
    <!-- Using JDK 8 is incompatible with an increasing number of plugins -->
    <minimalJavaBuildVersion>11</minimalJavaBuildVersion>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- project version -->
    <revision>2.20.1-SNAPSHOT</revision>
    <snakeyaml.version>2.0</snakeyaml.version>
    <spotless-maven-plugin.version>2.37.0</spotless-maven-plugin.version>
    <spring-boot.version>2.7.12</spring-boot.version>
    <spring-cloud.version>2021.0.7</spring-cloud.version>
    <!-- Used in parent POM -->
    <surefire.version>3.0.0-M9</surefire.version>
    <xml-maven-plugin.version>1.0.2</xml-maven-plugin.version>
  </properties>

  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-bom</artifactId>
        <version>${assertj.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <version>${jackson.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- Transitive dependency of multiple dependencies -->
      <!-- We fix a common version -->
      <dependency>
        <groupId>org.jetbrains.kotlin</groupId>
        <artifactId>kotlin-bom</artifactId>
        <version>${kotlin.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>io.fabric8</groupId>
        <artifactId>kubernetes-client-bom</artifactId>
        <version>${kubernetes-client.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-bom</artifactId>
        <version>${log4j2.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>com.lmax</groupId>
        <artifactId>disruptor</artifactId>
        <version>${disruptor.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.flume.flume-ng-channels</groupId>
        <artifactId>flume-file-channel</artifactId>
        <version>${flume.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-jmx</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-util</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.apache.flume</groupId>
        <artifactId>flume-ng-embedded-agent</artifactId>
        <version>${flume.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.flume</groupId>
        <artifactId>flume-ng-sdk</artifactId>
        <version>${flume.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- Transitive dependency of multiple dependencies -->
      <!-- We fix a common version -->
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>

      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.logging.log4j.samples</groupId>
        <artifactId>log4j-samples-flume-common</artifactId>
        <version>${project.version}</version>
      </dependency>

      <!-- Transitive dependency of multiple dependencies -->
      <!-- We fix a common version -->
      <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <version>${snakeyaml.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>

    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-maven-plugin</artifactId>
          <version>${jetty.version}</version>
        </plugin>

        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>${spotless-maven-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring-boot.version}</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>xml-maven-plugin</artifactId>
          <version>${xml-maven-plugin.version}</version>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
        <version>${flatten-maven-plugin.version}</version>
        <configuration>
          <updatePomFile>true</updatePomFile>
          <flattenMode>resolveCiFriendliesOnly</flattenMode>
        </configuration>
        <executions>
          <execution>
            <id>flatten-revision</id>
            <goals>
              <goal>flatten</goal>
            </goals>
            <phase>process-resources</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-upper-bound-deps</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireUpperBoundDeps/>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <configuration>
          <java>
            <licenseHeader>
              <file>${maven.multiModuleProjectDirectory}/spotless-license-header.txt</file>
            </licenseHeader>
            <trimTrailingWhitespace/>
            <endWithNewline/>
            <removeUnusedImports/>
            <indent>
              <spaces>true</spaces>
              <spacesPerTab>4</spacesPerTab>
            </indent>
            <importOrder>
              <order>java,javax,org.apache.logging,,\#java,\#javax,\#org.apache.logging,\#</order>
            </importOrder>
          </java>
          <pom>
            <sortPom>
              <expandEmptyElements>false</expandEmptyElements>
              <keepBlankLines>true</keepBlankLines>
              <indentSchemaLocation>true</indentSchemaLocation>
              <sortDependencies>scope,artifactId,groupId</sortDependencies>
              <sortDependencyExclusions>artifactId,groupId</sortDependencyExclusions>
              <sortModules>true</sortModules>
              <sortProperties>true</sortProperties>
              <sortPlugins>artifactId,groupId</sortPlugins>
            </sortPom>
          </pom>
        </configuration>
        <executions>
          <execution>
            <id>default-spotless</id>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>

  </build>

</project>
